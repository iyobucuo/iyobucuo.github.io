<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git 忽略文件</title>
    <link href="/2022/11/17/Git-%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6/"/>
    <url>/2022/11/17/Git-%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="一、是什么"><a href="#一、是什么" class="headerlink" title="一、是什么"></a><strong>一、是什么</strong></h3><p>​    <a href="https://git-scm.com/docs/gitignore">官网</a> 对其的定义是 <strong>gitignore - Specifies intentionally untracked files to ignore</strong></p><p>​    我的理解是 可以在进行代码版本控制时，将不想要提交到代码仓库的文件或目录忽略的一种文件。</p><h3 id="二、怎么用"><a href="#二、怎么用" class="headerlink" title="二、怎么用"></a>二、怎么用</h3><p>​    <strong>1、忽略原则</strong></p><p>​        a、忽略操作系统、编辑器生成的配置文件，如 .idea 目录下的文件、.log 运行日志文件</p><p>​        b、忽略编译、构建、打包时生成的文件，如 .class 后缀文件、.jar/.war 文件</p><p>​        c、信息敏感、修改仅适用于自己的文件，如存放口令的文件、修改了端口的文件</p><p>​    <strong>2、忽略规则</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta">#               表示此为注释,将被 Git 忽略</span><br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">*<span class="hljs-string">.a</span>         表示忽略所有 <span class="hljs-string">.a</span> 结尾的文件【常见的有 <span class="hljs-string">.class</span> <span class="hljs-string">.log</span> <span class="hljs-string">.jar</span> <span class="hljs-string">.war</span>】<br></code></pre></td></tr></table></figure><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">!<span class="hljs-keyword">lib</span>.a          表示 不忽略 <span class="hljs-keyword">lib</span>.a 文件【无论在根目录还是子目录中】<br></code></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/11/18/zmLVqH.png" alt="zmLVqH.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/TODO           /</span> 在前，表示只忽略 根目录 下的指定文件夹或文件<br></code></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/11/18/zmLdJ0.png" alt="zmLdJ0.png"></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">build</span>/          表示忽略 <span class="hljs-keyword">build</span>/目录下的所有文件，过滤整个<span class="hljs-keyword">build</span>文件夹<br></code></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/11/18/zmLryF.png" alt="zmLryF.png"></p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ceylon"><span class="hljs-meta">doc</span><span class="hljs-comment">/*.txt       表示忽略 根目录下 tom 文件夹里的指定类型文件，但不会忽略 tom 下一级目录中的指定类型文件</span><br></code></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/11/18/zmLWJx.png" alt="zmLWJx.png"></p><h3 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">bin/: </span>          表示忽略当前路径下的<span class="hljs-keyword">bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 </span><span class="hljs-keyword">bin </span>文件<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs awk">/bin:           表示忽略根目录下的bin文件<br><span class="hljs-regexp">/*.c:           表示忽略cat.c，不忽略 build/</span>cat.c<br>debug<span class="hljs-regexp">/*.obj:    表示忽略debug/i</span>o.obj，不忽略 debug<span class="hljs-regexp">/common/i</span>o.obj和tools<span class="hljs-regexp">/debug/i</span>o.obj<br>**<span class="hljs-regexp">/foo:         表示忽略/</span>foo,a<span class="hljs-regexp">/foo,a/</span>b/foo等<br>a<span class="hljs-regexp">/**/</span>b:         表示忽略a<span class="hljs-regexp">/b, a/</span>x<span class="hljs-regexp">/b,a/</span>x<span class="hljs-regexp">/y/</span>b等<br>!<span class="hljs-regexp">/bin/</span>run.sh    表示不忽略bin目录下的run.sh文件<br>*.log:          表示忽略所有 .log 文件<br>config.php:     表示忽略当前路径的 config.php 文件<br>  <br><span class="hljs-regexp">/mtk/</span>           表示过滤整个文件夹<br>*.zip           表示过滤所有.zip文件<br><span class="hljs-regexp">/mtk/</span><span class="hljs-keyword">do</span>.c       表示过滤某个具体文件<br>  <br>被过滤掉的文件就不会出现在git仓库中（gitlab或github）了，当然本地库中还有，只是push的时候不会上传。<br>  <br>需要注意的是，gitignore还可以指定要将哪些文件添加到版本管理中，如下：<br>!*.zip<br>!<span class="hljs-regexp">/mtk/</span>one.txt<br>  <br>唯一的区别就是规则开头多了一个感叹号，Git会将满足这类规则的文件添加到版本管理中。为什么要有两种规则呢？<br>想象一个场景：假如我们只需要管理<span class="hljs-regexp">/mtk/</span>目录中的one.txt文件，这个目录中的其他文件都不需要管理，那么.gitignore规则应写为：：<br><span class="hljs-regexp">/mtk/</span>*<br>!<span class="hljs-regexp">/mtk/</span>one.txt<br>  <br>假设我们只有过滤规则，而没有添加规则，那么我们就需要把<span class="hljs-regexp">/mtk/</span>目录下除了one.txt以外的所有文件都写出来！<br>注意上面的<span class="hljs-regexp">/mtk/</span>*不能写为<span class="hljs-regexp">/mtk/</span>，否则父目录被前面的规则排除掉了，one.txt文件虽然加了!过滤规则，也不会生效！<br>  <br>----------------------------------------------------------------------------------<br>还有一些规则如下：<br>fd1/*<br>说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 <span class="hljs-regexp">/fd1/</span> 目录，还是某个子目录 <span class="hljs-regexp">/child/</span>fd1/ 目录，都会被忽略；<br>  <br><span class="hljs-regexp">/fd1/</span>*<br>说明：忽略根目录下的 <span class="hljs-regexp">/fd1/</span> 目录的全部内容；<br>  <br>/*<br>!.gitignore<br>!<span class="hljs-regexp">/fw/</span><br><span class="hljs-regexp">/fw/</span>*<br>!<span class="hljs-regexp">/fw/</span>bin/<br>!<span class="hljs-regexp">/fw/</span>sf/<br>说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 <span class="hljs-regexp">/fw/</span>bin<span class="hljs-regexp">/ 和 /</span>fw<span class="hljs-regexp">/sf/</span> 目录；注意要先对bin/的父目录使用!规则，使其不被排除。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>todo</title>
    <link href="/2022/11/13/todo/"/>
    <url>/2022/11/13/todo/</url>
    
    <content type="html"><![CDATA[<h2 id="todo-list"><a href="#todo-list" class="headerlink" title="todo list"></a>todo list</h2><ol><li><input disabled="" type="checkbox"> git 忽略文件</li><li><input disabled="" type="checkbox"> nginx</li></ol>]]></content>
    
    
    <categories>
      
      <category>todo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>todo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 入门</title>
    <link href="/2022/11/13/Hexo-%E5%85%A5%E9%97%A8/"/>
    <url>/2022/11/13/Hexo-%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-入门"><a href="#Hexo-入门" class="headerlink" title="Hexo 入门"></a>Hexo 入门</h1><h3 id="0、准备工作"><a href="#0、准备工作" class="headerlink" title="0、准备工作"></a>0、准备工作</h3><ul><li>Node.js</li><li>Git</li><li>cnpm</li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-comment"># 安装</span><br><span class="hljs-built_in">npm</span> install -g cnpm --registry=https://registry.<span class="hljs-built_in">npm</span>.taobao.org<br><span class="hljs-comment"># 更新</span><br><span class="hljs-built_in">npm</span> -g i cnpm<br></code></pre></td></tr></table></figure><h3 id="1、安装-Hexo"><a href="#1、安装-Hexo" class="headerlink" title="1、安装 Hexo"></a>1、安装 Hexo</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install -g hexo<br>hexo -v             <span class="hljs-comment"># 安装完毕检测</span><br></code></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init blog      <span class="hljs-comment"># 初始化创建，会再桌面创建blog文件夹</span><br><span class="hljs-built_in">cd</span> blog             <span class="hljs-comment"># 进入blog目录</span><br>cnpm install        <span class="hljs-comment"># 进一步安装hexo所需文件</span><br></code></pre></td></tr></table></figure><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean     <span class="hljs-comment"># 清除所有记录 /hexo c</span><br>hexo generate  <span class="hljs-comment"># 生成静态网页 /hexo g</span><br>hexo server    <span class="hljs-comment"># 启动服务 /hexo s</span><br></code></pre></td></tr></table></figure><h4 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h4><p><a href="http://localhost:4000/">localhost:4000 本地预览</a></p><h3 id="2、配置-Gitee"><a href="#2、配置-Gitee" class="headerlink" title="2、配置 Gitee"></a>2、配置 Gitee</h3><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><ul><li>仓库名称与归属一致</li><li>配置本地 git 的用户名和邮箱</li></ul><h4 id="配置公钥"><a href="#配置公钥" class="headerlink" title="配置公钥"></a>配置公钥</h4><ul><li>执行命令<code>ssh-keygen -t rsa -C &quot;xxxxx@xxxxx.com&quot;</code>生成公钥文件 <strong>id_rsa.pub</strong>，复制其中的内容</li><li>找到 Gitee 公钥配置界面：我的-设置-安全设置-SHH公钥</li><li>自定义标题，粘贴复制的公钥内容，确定</li></ul><h4 id="复制项目的-shh-地址"><a href="#复制项目的-shh-地址" class="headerlink" title="复制项目的 shh 地址"></a>复制项目的 shh 地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git@gitee.com:iyobucuo/iyobucuo.git<br></code></pre></td></tr></table></figure><h4 id="修改-config-yml-文件"><a href="#修改-config-yml-文件" class="headerlink" title="修改 _config.yml 文件"></a>修改 _config.yml 文件</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>                        <span class="hljs-comment"># type为git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@gitee.com:iyobucuo/iyobucuo.git</span>  <span class="hljs-comment"># 仓库的 URL</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><h3 id="3、部署"><a href="#3、部署" class="headerlink" title="3、部署"></a>3、部署</h3><h4 id="安装部署插件"><a href="#安装部署插件" class="headerlink" title="安装部署插件"></a>安装部署插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h4 id="一键部署脚本"><a href="#一键部署脚本" class="headerlink" title="一键部署脚本"></a>一键部署脚本</h4><blockquote><p>包括上传代码到仓库</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 新建 deploy.sh 文件，内容如下。双击运行即可</span><br><br> <span class="hljs-attribute">hexo</span> clean<br> hexo g <br> hexo d<br></code></pre></td></tr></table></figure><h4 id="同时部署到-Giuhub-和-Gitee"><a href="#同时部署到-Giuhub-和-Gitee" class="headerlink" title="同时部署到 Giuhub 和 Gitee"></a>同时部署到 Giuhub 和 Gitee</h4><p>  修改 _config.yml 配置，如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>                        <span class="hljs-comment"># type为git</span><br>    <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:iyobucuo/iyobucuo.github.io.git</span><br>    <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>                        <span class="hljs-comment"># type为git</span><br>    <span class="hljs-attr">repo:</span> <span class="hljs-string">git@gitee.com:iyobucuo/iyobucuo.git</span><br>    <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br><br><span class="hljs-comment"># 或</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>                        <span class="hljs-comment"># type为git</span><br>  <span class="hljs-attr">repo:</span> <br>    <span class="hljs-attr">github:</span> <span class="hljs-string">git@github.com:iyobucuo/iyobucuo.github.io.git</span><br>    <span class="hljs-attr">gitee:</span> <span class="hljs-string">git@gitee.com:iyobucuo/iyobucuo.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><h3 id="4、写博客"><a href="#4、写博客" class="headerlink" title="4、写博客"></a>4、写博客</h3><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;博客名称&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h2 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h2>]]></content>
    
  </entry>
  
  
  
</search>
